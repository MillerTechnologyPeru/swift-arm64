diff --git a/Sources/Commands/Options.swift b/Sources/Commands/Options.swift
index ad69c222..724289b0 100644
--- a/Sources/Commands/Options.swift
+++ b/Sources/Commands/Options.swift
@@ -74,5 +74,8 @@ public class ToolOptions {
     /// Whether to enable generation of `.swiftinterface`s alongside `.swiftmodule`s.
     public var shouldEnableParseableModuleInterfaces = false
 
+    /// The number of jobs for llbuild to start (aka the number of schedulerLanes)
+    public var jobs: UInt32? = nil
+
     public required init() {}
 }
diff --git a/Sources/Commands/SwiftTool.swift b/Sources/Commands/SwiftTool.swift
index 1386444c..2e24d81a 100644
--- a/Sources/Commands/SwiftTool.swift
+++ b/Sources/Commands/SwiftTool.swift
@@ -376,6 +376,11 @@ public class SwiftTool<Options: ToolOptions> {
             option: parser.add(option: "--enable-parseable-module-interfaces", kind: Bool.self),
             to: { $0.shouldEnableParseableModuleInterfaces = $1 })
 
+        binder.bind(
+            option: parser.add(option: "--jobs", shortName: "-j", kind: Int.self,
+                usage: "The number of jobs to spawn in parallel during the build process"),
+            to: { $0.jobs = UInt32($1) })
+
         // Let subclasses bind arguments.
         type(of: self).defineArguments(parser: parser, binder: binder)
 
@@ -640,6 +645,9 @@ public class SwiftTool<Options: ToolOptions> {
 
     func runLLBuildAsLibrary(manifest: AbsolutePath, llbuildTarget: String) throws {
         let databasePath = buildPath.appending(component: "build.db").pathString
+        if let jobs = options.jobs {
+            BuildSystem.setSchedulerLaneWidth(width: jobs)
+        }
         let buildSystem = BuildSystem(buildFile: manifest.pathString, databaseFile: databasePath, delegate: buildDelegate)
         buildDelegate.isVerbose = verbosity != .concise
         buildDelegate.onCommmandFailure = { [weak buildSystem] in buildSystem?.cancel() }
@@ -676,6 +684,9 @@ public class SwiftTool<Options: ToolOptions> {
         if verbosity != .concise {
             args.append("-v")
         }
+        if let jobs = options.jobs {
+            args.append("-j\(jobs)")
+        }
 
         // Create the environment for llbuild.
         var env = Process.env
