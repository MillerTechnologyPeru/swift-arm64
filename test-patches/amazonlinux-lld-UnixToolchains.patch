diff --git a/lib/Driver/UnixToolChains.cpp b/lib/Driver/UnixToolChains.cpp
index 61498c144a2..f1952d57620 100644
--- a/lib/Driver/UnixToolChains.cpp
+++ b/lib/Driver/UnixToolChains.cpp
@@ -10,6 +10,9 @@
 //
 //===----------------------------------------------------------------------===//
 
+#include <iostream>
+#include "llvm/TargetParser/Triple.h"
+
 #include "ToolChains.h"
 
 #include "swift/Basic/Dwarf.h"
@@ -111,8 +114,23 @@ ToolChain::InvocationInfo toolchains::GenericUnix::constructInvocation(
 }
 
 std::string toolchains::GenericUnix::getDefaultLinker() const {
+  std::cout << "We need to check for Amazon Linux and set default to lld\n";
+  std::cout << "getTriple().getArch(): " << getTriple().getArch() << std::endl;
+  std::cout << "getTriple().getVendorName(): " << getTriple().getVendorName() << std::endl;
+  std::cout << "getTriple().isAndroid(): " << getTriple().isAndroid() << std::endl;
+  std::cout << "getTriple().getArchName(): " << getTriple().getArchName() << std::endl;
+  std::cout << "getTriple().getOSName(): " << getTriple().getOSName() << std::endl;
+  std::cout << "getTriple().getOS(): " << getTriple().getOS() << std::endl;
+  std::cout << "getTriple().getOSMajorVersion(): " << getTriple().getOSMajorVersion() << std::endl;
+  std::cout << "getTriple().getOSMinorVersion(): " << getTriple().getOSMinorVersion() << std::endl;
+
   if (getTriple().isAndroid())
     return "lld";
+  // Check for Amazon Linux and default to lld
+  if (getTriple().getVendorName() == "amazon") {
+    std::cout << "We are using Amazon Linux so default to lld\n";
+    return "lld";
+  }
 
   switch (getTriple().getArch()) {
   case llvm::Triple::arm:
